<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_player_idle;
timer = 0;
until_bullet = 0;
bullet_count = 12;
vx = 0;
vy = 0;
player_speed = 2;
damaged = false;

hp = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1;
damaged = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bullet_count = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement and Firing
if (until_bullet &gt; 0) until_bullet -= 1;
check_inputs();

vx = (D - A) * player_speed;
vy = (S - W) * player_speed;

if (W)
    {
    sprite_index = spr_player_up;
    image_xscale = 1;
    }
    
if (S)
    {
    sprite_index = spr_player_down;
    image_xscale = 1;
    }
    
if (A)
    {
    sprite_index = spr_player_side;
    image_xscale = 1;
    }
    
if (D)
    {
    sprite_index = spr_player_side;
    image_xscale = -1;
    }

if (!keyboard_check(vk_left) &amp;&amp; !keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_up) &amp;&amp; !keyboard_check(vk_down)
     &amp;&amp; vx == 0 &amp;&amp; vy == 0 ) {
    sprite_index = spr_player_idle;
    image_xscale =1;
}

if (L &amp;&amp; !R &amp;&amp; !D2 &amp;&amp; !U &amp;&amp; until_bullet == 0) {    // left
    until_bullet = bullet_count;
    with(instance_create (x - 10,y + 2, obj_bullet) ) {
        image_angle = 270;
    }
} 

if (!L &amp;&amp; !R &amp;&amp; D2 &amp;&amp; !U &amp;&amp; until_bullet == 0) {    // down
    until_bullet = bullet_count;
    with(instance_create (x - 5,y, obj_bullet) ) {
        image_angle = 0;
    }
}

if (!L &amp;&amp; !R &amp;&amp; !D2 &amp;&amp; U &amp;&amp; until_bullet == 0) {    // up
    until_bullet = bullet_count;
    with(instance_create (x - 10,y, obj_bullet) ) {
        image_angle = 180;
    }
}

if (!L &amp;&amp; R &amp;&amp; !D2 &amp;&amp; !U &amp;&amp; until_bullet == 0) {    // right
    until_bullet = bullet_count;
    with(instance_create (x - 6,y + 2, obj_bullet) ) {
        image_angle = 90;
    }
}

if (!L &amp;&amp; R &amp;&amp; !D2 &amp;&amp; U &amp;&amp; until_bullet == 0) {     // up-right
    until_bullet = bullet_count;
    with(instance_create (x - 5,y, obj_bullet) ) {
        image_angle = 135;
    }
}

if (!L &amp;&amp; R &amp;&amp; D2 &amp;&amp; !U &amp;&amp; until_bullet == 0) {     // down-right
    until_bullet = bullet_count;
    with(instance_create (x - 6,y + 8, obj_bullet) ) {
        image_angle = 45;
    }
}

if (L &amp;&amp; !R &amp;&amp; !D2 &amp;&amp; U &amp;&amp; until_bullet == 0) {     // up-left
    until_bullet = bullet_count;
    with(instance_create (x - 8,y, obj_bullet) ) {
        image_angle = 225;
    }
}

if (L &amp;&amp; !R &amp;&amp; D2 &amp;&amp; !U &amp;&amp; until_bullet == 0) {     // down-left
    until_bullet = bullet_count;
    with(instance_create (x - 6,y + 10, obj_bullet) ) {
        image_angle = 315;
    }
}

check_fire();
check_motion();

// collision

repeat (abs(vx) ) {
    if (!place_meeting(x + (sign(vx) * player_speed), y, obj_solid) ) {
        x += sign(vx);
    } else {
        break;
    }
}

repeat (abs(vy) ) {
    if (!place_meeting(x , y + (sign(vy) * player_speed), obj_solid) ) {
        y += sign(vy);
    } else {
        break;
    }
}


// death

if (hp &lt;= 0) {
    room_goto (rm_end_game);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_par_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!damaged) {
    hp -= other.damage;
    damaged = true;
    alarm[1] = 120;
    image_alpha = 0.6;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_start_game);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
